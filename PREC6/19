#include <stdio.h>
#include <stdlib.h>

typedef int element;
typedef struct ListNode{
	element data;
	struct ListNode *link;
}ListNode;

ListNode* insert_first(ListNode *head, element value) {
	ListNode *q = (ListNode *)malloc(sizeof(ListNode));
	q->data = value;
	q->link = head;
	head = q;
	return head;
}

// head_c리스트를 head_a리스트와 head_b리스트로 분리하는 함수
// head_c의 홀수번째 노드들 -> head_a
// head_c의 짝수번째 노드들 -> head_b
void split(ListNode *head_c, ListNode **head_a, ListNode **head_b) {
	int size = 0;
	for(ListNode *p = head_c; p!=NULL; p=p->link) {
		size%2==0 ? (*head_b = insert_first((*head_b), p->data)) : (*head_a = insert_first((*head_a), p->data));
		size++;
	}
}
void print_list(ListNode* head) {
	for(ListNode *p = head; p!=NULL; p=p->link)
		printf("%d->", p->data);
	printf("NULL\n");
}

int main(){
	ListNode *head_C = NULL;
	ListNode *head_A = NULL, *head_B = NULL;

	for(int i=0;i<5;i++) {
		head_C = insert_first(head_C, i*10);
	}
	split(head_C, &head_A, &head_B);
	print_list(head_A);
	print_list(head_B);
	print_list(head_C);

}
